spring:
  application:
    name: lecture-service
#  r2dbc:
#    url: r2dbc:h2:mem:///msa
#    username: sa
#    password:

server:
#  port: 0
  port: 8080
eureka:
  instance:
    instance-id: ${spring.application.name}:${random.value}
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      bootstrap-servers: localhost:9092
      group-id: lecture-topic
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

logging:
  level:
    root: INFO
    org.springframework.r2dbc: DEBUG
#debug: true